# Generated by Django 3.2.1 on 2023-04-26 07:03

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0028_payment_media'),
    ]

    operations = [
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата создания')),
                ('payment_date', models.DateField(default=datetime.date.today, verbose_name='Дата платежа')),
                ('is_outgoing', models.BooleanField(default=False, verbose_name='Исходящий платёж')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=9,
                                               validators=[django.core.validators.MinValueValidator(0)],
                                               verbose_name='Сумма')),
                ('purpose_text', models.CharField(max_length=128, verbose_name='Назначение (текст)')),
                ('comment', models.CharField(blank=True, max_length=256, verbose_name='Дополнительный комментарий')),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments',
                                             to='main.agency')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                            related_name='created_payments', to='main.agencyemployee')),
                ('payer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='output_payments',
                                            to='main.basepaymentparty')),
                ('recipient',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_payments',
                                   to='main.basepaymentparty')),
                ('trip', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                           related_name='trip_payments', to='main.trip')),
            ],
            options={
                'verbose_name': 'Платёж',
                'verbose_name_plural': 'Платежи',
            },
        ),
        migrations.AlterField(
            model_name='paymentmedia',
            name='payment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_media_files',
                                    to='main.payment'),
        ),
        migrations.DeleteModel(
            name='ClientContractPayment',
        ),
        migrations.DeleteModel(
            name='HotelPayment',
        ),
        migrations.DeleteModel(
            name='TripServicePayment',
        ),
        migrations.DeleteModel(
            name='BasePayment',
        ),
        migrations.CreateModel(
            name='BasePaymentExpenseItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=9, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Сумма')),
            ],
            options={
                'verbose_name': 'Статья платежа',
                'verbose_name_plural': 'Статьи платежей',
            },
        ),
        migrations.AlterModelOptions(
            name='basepaymentparty',
            options={'verbose_name': 'Участник платежа', 'verbose_name_plural': 'Участники платежей'},
        ),
        migrations.AlterModelOptions(
            name='personpaymentparty',
            options={'verbose_name': 'Сторона платежа - частное лицо', 'verbose_name_plural': 'Стороны платежей - частные лица'},
        ),
        migrations.AlterModelOptions(
            name='supplierpaymentparty',
            options={'verbose_name': 'Сторона платежа - контрагент', 'verbose_name_plural': 'Стороны платежей - контрагенты'},
        ),
        migrations.CreateModel(
            name='ClientContractExpenseItem',
            fields=[
                ('parent', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='contract_expense_item', serialize=False, to='main.basepaymentexpenseitem')),
                ('client_contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_expense_items', to='main.clientcontract')),
            ],
            options={
                'verbose_name': 'Статья платежа - за туристический договор',
                'verbose_name_plural': 'Статьи платежей - за туристические договоры',
            },
            bases=('main.basepaymentexpenseitem',),
        ),
        migrations.CreateModel(
            name='ClientContractServiceExpenseItem',
            fields=[
                ('parent', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='contract_service_expense_item', serialize=False, to='main.basepaymentexpenseitem')),
                ('contract_and_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_expense_items', to='main.clientcontractandservice')),
            ],
            options={
                'verbose_name': 'Статья платежа - за доп. услугу в договоре',
                'verbose_name_plural': 'Статьи платежей - за доп. услуги в договорах',
            },
            bases=('main.basepaymentexpenseitem',),
        ),
        migrations.CreateModel(
            name='HotelExpenseItem',
            fields=[
                ('parent', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='hotel_expense_item', serialize=False, to='main.basepaymentexpenseitem')),
                ('hotel_visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_expense_items', to='main.triphotelvisit')),
            ],
            options={
                'verbose_name': 'Статья платежа - за гостиницу',
                'verbose_name_plural': 'Статьи платежей - за гостиницы',
            },
            bases=('main.basepaymentexpenseitem',),
        ),
        migrations.CreateModel(
            name='TripServiceExpenseItem',
            fields=[
                ('parent', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='trip_service_expense_item', serialize=False, to='main.basepaymentexpenseitem')),
                ('trip_and_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_expense_items', to='main.tripandservice')),
            ],
            options={
                'verbose_name': 'Статья платежа - за услугу в туре',
                'verbose_name_plural': 'Статьи платежей - за услуги в турах',
            },
            bases=('main.basepaymentexpenseitem',),
        ),
        migrations.AddField(
            model_name='basepaymentexpenseitem',
            name='payment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expense_items', to='main.payment'),
        ),
        migrations.CreateModel(
            name='AgencyPaymentParty',
            fields=[
                ('payment_party', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='agency_payment_party', serialize=False, to='main.basepaymentparty')),
                ('agency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_party_links', to='main.agency')),
            ],
            options={
                'verbose_name': 'Сторона платежа - агентство',
                'verbose_name_plural': 'Стороны платежей - агентства',
            },
            bases=('main.basepaymentparty',),
        ),
    ]
